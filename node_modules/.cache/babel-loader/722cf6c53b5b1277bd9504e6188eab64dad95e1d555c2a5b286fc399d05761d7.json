{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\Backend task\\\\inotebook\\\\src\\\\Context\\\\notes\\\\NoteState.js\";\nimport { useState } from \"react\";\nimport noteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  var _s = $RefreshSig$();\n  const host = \"http//:localhost:5000\";\n  const notesinitial = [{\n    \"_id\": \"684044d35c08a4c075dbh5868\",\n    \"user\": \"683d454d13b0a5c9cda53634\",\n    \"title\": \"My title\",\n    \"description\": \"200iq\",\n    \"tag\": \"Smart\",\n    \"date\": \"2025-06-04T13:06:27.893Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"684044d45c08a4c075db0586a\",\n    \"user\": \"683d454d13b0a5c9cda53634\",\n    \"title\": \"My title\",\n    \"description\": \"200iq\",\n    \"tag\": \"Smart\",\n    \"date\": \"2025-06-04T13:06:28.287Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"6847f0337f4d1e8f8c978fd97\",\n    \"user\": \"683d454d13b0a5c9cda53634\",\n    \"title\": \"My title\",\n    \"description\": \"200iq\",\n    \"tag\": \"Smart\",\n    \"date\": \"2025-06-10T08:43:31.399Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"684044d45c08a43c075db586a\",\n    \"user\": \"683d454d13b0a5c9cda53634\",\n    \"title\": \"My title\",\n    \"description\": \"200iq\",\n    \"tag\": \"Smart\",\n    \"date\": \"2025-06-04T13:06:28.287Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"684044d45c08a4c075db1586a\",\n    \"user\": \"683d454d13b0a5c9cda53634\",\n    \"title\": \"My title\",\n    \"description\": \"200iq\",\n    \"tag\": \"Smart\",\n    \"date\": \"2025-06-04T13:06:28.287Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"684044d45c08a43c075db3586a\",\n    \"user\": \"683d454d13b0a5c9cda53634\",\n    \"title\": \"My title\",\n    \"description\": \"200iq\",\n    \"tag\": \"Smart\",\n    \"date\": \"2025-06-04T13:06:28.287Z\",\n    \"__v\": 0\n  }];\n  //addnote\n  const addNote = async (title, description, tag) => {\n    //api call\n    const responce = await fetch(`${host}/api/notes/addnote`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjgzZDQ1NGQxM2IwYTVjOWNkYTUzNjM0In0sImlhdCI6MTc0ODkzMjgxNH0.Vv5T8PXX5_JsiZSWP7qNqa-msCoHUkqH1W4ZnNi4wgE'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    // const json = responce.json();\n\n    console.log(\"adding a note\");\n    const note = {\n      \"_id\": \"684044d45c08a43c075db3586a\",\n      \"user\": \"683d454d13b0a45c9cda53634\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2025-06-04T13:06:28.287Z\",\n      \"__v\": 0\n    };\n    setnotes(notes.concat(note));\n  };\n\n  //deleteNote\n  const deleteNote = id => {\n    console.log(\"deleting a note with id\" + id);\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newNote);\n  };\n\n  //editNote\n  const editNote = async (id, title, description, tag) => {\n    _s();\n    //api call\n    const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjgzZDQ1NGQxM2IwYTVjOWNkYTUzNjM0In0sImlhdCI6MTc0ODkzMjgxNH0.Vv5T8PXX5_JsiZSWP7qNqa-msCoHUkqH1W4ZnNi4wgE'\n      },\n      body: JSON.stringify(data)\n    });\n    const json = responce.json();\n    //Logic to edit in client\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n    const [notes, setnotes] = useState(notesinitial);\n    return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n      value: {\n        notes,\n        addNote,\n        deleteNote,\n        editNote\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this);\n  };\n  _s(editNote, \"AoVBfJhv+WZzotSMTTreJsweXo4=\");\n};\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","$RefreshSig$","host","notesinitial","addNote","title","description","tag","responce","fetch","method","headers","body","JSON","stringify","console","log","note","setnotes","notes","concat","deleteNote","id","newNote","filter","_id","editNote","data","json","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed/Desktop/Backend task/inotebook/src/Context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport noteContext from \"./noteContext\";\r\n\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http//:localhost:5000\"\r\n  const notesinitial =\r\n    [\r\n      {\r\n        \"_id\": \"684044d35c08a4c075dbh5868\",\r\n        \"user\": \"683d454d13b0a5c9cda53634\",\r\n        \"title\": \"My title\",\r\n        \"description\": \"200iq\",\r\n        \"tag\": \"Smart\",\r\n        \"date\": \"2025-06-04T13:06:27.893Z\",\r\n        \"__v\": 0\r\n      },\r\n      {\r\n        \"_id\": \"684044d45c08a4c075db0586a\",\r\n        \"user\": \"683d454d13b0a5c9cda53634\",\r\n        \"title\": \"My title\",\r\n        \"description\": \"200iq\",\r\n        \"tag\": \"Smart\",\r\n        \"date\": \"2025-06-04T13:06:28.287Z\",\r\n        \"__v\": 0\r\n      },\r\n      {\r\n        \"_id\": \"6847f0337f4d1e8f8c978fd97\",\r\n        \"user\": \"683d454d13b0a5c9cda53634\",\r\n        \"title\": \"My title\",\r\n        \"description\": \"200iq\",\r\n        \"tag\": \"Smart\",\r\n        \"date\": \"2025-06-10T08:43:31.399Z\",\r\n        \"__v\": 0\r\n      },\r\n      {\r\n        \"_id\": \"684044d45c08a43c075db586a\",\r\n        \"user\": \"683d454d13b0a5c9cda53634\",\r\n        \"title\": \"My title\",\r\n        \"description\": \"200iq\",\r\n        \"tag\": \"Smart\",\r\n        \"date\": \"2025-06-04T13:06:28.287Z\",\r\n        \"__v\": 0\r\n      },\r\n      {\r\n        \"_id\": \"684044d45c08a4c075db1586a\",\r\n        \"user\": \"683d454d13b0a5c9cda53634\",\r\n        \"title\": \"My title\",\r\n        \"description\": \"200iq\",\r\n        \"tag\": \"Smart\",\r\n        \"date\": \"2025-06-04T13:06:28.287Z\",\r\n        \"__v\": 0\r\n      },\r\n      {\r\n        \"_id\": \"684044d45c08a43c075db3586a\",\r\n        \"user\": \"683d454d13b0a5c9cda53634\",\r\n        \"title\": \"My title\",\r\n        \"description\": \"200iq\",\r\n        \"tag\": \"Smart\",\r\n        \"date\": \"2025-06-04T13:06:28.287Z\",\r\n        \"__v\": 0\r\n      },\r\n    ]\r\n  //addnote\r\n  const addNote = async (title, description, tag) => {\r\n\r\n    //api call\r\n  const responce = await fetch(`${host}/api/notes/addnote`, {\r\n    method : 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjgzZDQ1NGQxM2IwYTVjOWNkYTUzNjM0In0sImlhdCI6MTc0ODkzMjgxNH0.Vv5T8PXX5_JsiZSWP7qNqa-msCoHUkqH1W4ZnNi4wgE'\r\n    },\r\n    body: JSON.stringify({title, description, tag})\r\n  });\r\n  // const json = responce.json();\r\n\r\n    console.log(\"adding a note\");\r\n    const note = {\r\n      \"_id\": \"684044d45c08a43c075db3586a\",\r\n      \"user\": \"683d454d13b0a45c9cda53634\",\r\n      \"title\": title,\r\n      \"description\": description,\r\n      \"tag\": tag,\r\n      \"date\": \"2025-06-04T13:06:28.287Z\",\r\n      \"__v\": 0\r\n    }\r\n    setnotes(notes.concat(note))\r\n  }\r\n\r\n  //deleteNote\r\n  const deleteNote = (id) => {\r\n    console.log(\"deleting a note with id\" + id)\r\n    const newNote = notes.filter((note) => { return note._id !== id })\r\n    setnotes(newNote)\r\n  }\r\n\r\n\r\n  //editNote\r\n  const editNote = async(id, title, description, tag) => {\r\n  //api call\r\n  const responce = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n    method : 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjgzZDQ1NGQxM2IwYTVjOWNkYTUzNjM0In0sImlhdCI6MTc0ODkzMjgxNH0.Vv5T8PXX5_JsiZSWP7qNqa-msCoHUkqH1W4ZnNi4wgE'\r\n    },\r\n    body: JSON.stringify(data)\r\n  });\r\n  const json = responce.json();\r\n  //Logic to edit in client\r\n  \r\n  for (let index = 0; index < notes.length; index++) {\r\n    const element = notes[index];\r\n    if (element._id === id) {\r\n      element.title = title;\r\n      element.description = description;\r\n      element.tag = tag;\r\n    }\r\n  }\r\n  \r\n  const [notes, setnotes] = useState(notesinitial)\r\n  return (\r\n    <noteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\r\n      {props.children}\r\n    </noteContext.Provider>\r\n  )\r\n  }}\r\n\r\nexport default NoteState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}