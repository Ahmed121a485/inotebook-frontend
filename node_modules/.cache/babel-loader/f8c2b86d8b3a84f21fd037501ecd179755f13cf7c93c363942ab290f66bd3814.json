{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\Backend task\\\\inotebook\\\\src\\\\components\\\\Alert.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Alert.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = ({\n  alerts\n}) => {\n  _s();\n  const [visibleAlerts, setVisibleAlerts] = useState([]);\n  useEffect(() => {\n    if (alerts && alerts.length > 0) {\n      alerts.forEach(alert => {\n        const id = Date.now() + Math.random(); // Unique ID\n        setVisibleAlerts(prev => [...prev, {\n          ...alert,\n          id\n        }]);\n        setTimeout(() => {\n          setVisibleAlerts(prev => prev.filter(a => a.id !== id));\n        }, 3000);\n      });\n    }\n  }, [alerts]);\n  const getIcon = type => {\n    switch (type) {\n      case 'success':\n        return '‚úÖ';\n      case 'danger':\n        return '‚ùå';\n      case 'warning':\n        return '‚ö†Ô∏è';\n      case 'info':\n        return '‚ÑπÔ∏è';\n      default:\n        return 'üîî';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert-stack\",\n    children: visibleAlerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `custom-alert alert-${alert.type}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert-icon\",\n        children: getIcon(alert.type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert-text\",\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, alert.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Alert, \"Ykhyh4irkcrEh3a0liZnD6nZxlI=\");\n_c = Alert;\nexport default Alert;\nvar _c;\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Alert","alerts","_s","visibleAlerts","setVisibleAlerts","length","forEach","alert","id","Date","now","Math","random","prev","setTimeout","filter","a","getIcon","type","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed/Desktop/Backend task/inotebook/src/components/Alert.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Alert.css';\r\n\r\nconst Alert = ({ alerts }) => {\r\n  const [visibleAlerts, setVisibleAlerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (alerts && alerts.length > 0) {\r\n      alerts.forEach((alert) => {\r\n        const id = Date.now() + Math.random(); // Unique ID\r\n        setVisibleAlerts((prev) => [...prev, { ...alert, id }]);\r\n\r\n        setTimeout(() => {\r\n          setVisibleAlerts((prev) => prev.filter((a) => a.id !== id));\r\n        }, 3000);\r\n      });\r\n    }\r\n  }, [alerts]);\r\n\r\n  const getIcon = (type) => {\r\n    switch (type) {\r\n      case 'success': return '‚úÖ';\r\n      case 'danger': return '‚ùå';\r\n      case 'warning': return '‚ö†Ô∏è';\r\n      case 'info': return '‚ÑπÔ∏è';\r\n      default: return 'üîî';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"alert-stack\">\r\n      {visibleAlerts.map((alert) => (\r\n        <div key={alert.id} className={`custom-alert alert-${alert.type}`}>\r\n          <span className=\"alert-icon\">{getIcon(alert.type)}</span>\r\n          <span className=\"alert-text\">{alert.message}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,IAAIK,MAAM,IAAIA,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;MAC/BJ,MAAM,CAACK,OAAO,CAAEC,KAAK,IAAK;QACxB,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;QACvCR,gBAAgB,CAAES,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAE,GAAGN,KAAK;UAAEC;QAAG,CAAC,CAAC,CAAC;QAEvDM,UAAU,CAAC,MAAM;UACfV,gBAAgB,CAAES,IAAI,IAAKA,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC;QAC7D,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMgB,OAAO,GAAIC,IAAI,IAAK;IACxB,QAAQA,IAAI;MACV,KAAK,SAAS;QAAE,OAAO,GAAG;MAC1B,KAAK,QAAQ;QAAE,OAAO,GAAG;MACzB,KAAK,SAAS;QAAE,OAAO,IAAI;MAC3B,KAAK,MAAM;QAAE,OAAO,IAAI;MACxB;QAAS,OAAO,IAAI;IACtB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBjB,aAAa,CAACkB,GAAG,CAAEd,KAAK,iBACvBR,OAAA;MAAoBoB,SAAS,EAAE,sBAAsBZ,KAAK,CAACW,IAAI,EAAG;MAAAE,QAAA,gBAChErB,OAAA;QAAMoB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEH,OAAO,CAACV,KAAK,CAACW,IAAI;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzD1B,OAAA;QAAMoB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEb,KAAK,CAACmB;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAF3ClB,KAAK,CAACC,EAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CApCIF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}