{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\Backend task\\\\inotebook\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: credentials.email,\n          password: credentials.password\n        })\n      });\n      const json = await response.json();\n      if (json.success) {\n        localStorage.setItem('token', json.JwtToken); // ✅ store token\n        toast.success(\"Logged in successfully\"); // ✅ toast instead of props.showAlert\n        navigate(\"/home\");\n      } else {\n        toast.error(\"Invalid credentials\"); // ❌ wrong login\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      toast.error(\"Something went wrong. Please try again later.\"); // ⚠️ error toast\n    }\n  };\n  const onChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"email\",\n          name: \"email\",\n          value: credentials.email,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          name: \"password\",\n          value: credentials.password,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary my-3\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"tON92gC6g17sNH8ocikzOdvEg9E=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","toast","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","success","localStorage","setItem","JwtToken","error","console","onChange","target","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","required","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed/Desktop/Backend task/inotebook/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: credentials.email, password: credentials.password }),\r\n      });\r\n\r\n      const json = await response.json();\r\n     \r\n\r\n      if (json.success) {\r\n        localStorage.setItem('token', json.JwtToken); // ✅ store token\r\n        toast.success(\"Logged in successfully\"); // ✅ toast instead of props.showAlert\r\n        navigate(\"/home\");\r\n      } else {\r\n        toast.error(\"Invalid credentials\"); // ❌ wrong login\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      toast.error(\"Something went wrong. Please try again later.\"); // ⚠️ error toast\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className='container my-5'>\r\n      <h1 className='mb-4'>Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input \r\n            type=\"email\" \r\n            className=\"form-control\" \r\n            id=\"email\" \r\n            name=\"email\" \r\n            value={credentials.email} \r\n            onChange={onChange} \r\n            required \r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input \r\n            type=\"password\" \r\n            className=\"form-control\" \r\n            id=\"password\" \r\n            name=\"password\" \r\n            value={credentials.password} \r\n            onChange={onChange} \r\n            required \r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}